# Generated by Django 3.2.9 on 2022-06-09 09:55

from django.db import migrations, models
import django.db.models.deletion
import mptt.fields


class Migration(migrations.Migration):

    dependencies = [
        ('rest_auth', '0002_auto_20220504_1021'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule', models.BooleanField(choices=[(True, 'allow'), (False, 'deny')])),
                ('by_owner_only', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_time', models.DateTimeField(auto_now=True, verbose_name='Modification date')),
                ('default_rule', models.BooleanField(choices=[(True, 'allow'), (False, 'deny')], default=True)),
                ('owner_applicability', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Permit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_time', models.DateTimeField(auto_now=True, verbose_name='Modification date')),
                ('actions', models.ManyToManyField(related_name='permit', through='rest_auth.AccessRule', to='rest_auth.Action')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Plugin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_time', models.DateTimeField(auto_now=True, verbose_name='Modification date')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SecurityZone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_time', models.DateTimeField(auto_now=True, verbose_name='Modification date')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='zones', to='rest_auth.securityzone')),
                ('permits', models.ManyToManyField(blank=True, related_name='zones', to='rest_auth.Permit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_time', models.DateTimeField(auto_now=True, verbose_name='Modification date')),
                ('groups', models.ManyToManyField(blank=True, related_name='roles', to='rest_auth.Group')),
                ('permits', models.ManyToManyField(blank=True, related_name='roles', to='rest_auth.Permit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='permit',
            name='plugin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permits', to='rest_auth.plugin'),
        ),
        migrations.AddField(
            model_name='action',
            name='plugin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='rest_auth.plugin'),
        ),
        migrations.AddField(
            model_name='accessrule',
            name='action',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_auth.action'),
        ),
        migrations.AddField(
            model_name='accessrule',
            name='permit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rest_auth.permit'),
        ),
        migrations.CreateModel(
            name='KeyChain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Creation date')),
                ('modified_time', models.DateTimeField(auto_now=True, verbose_name='Modification date')),
                ('keychain_id', models.CharField(max_length=255, unique=True, verbose_name='keychain_id')),
                ('permits', models.ManyToManyField(blank=True, related_name='keychains', to='rest_auth.Permit')),
                ('plugin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='keychains', to='rest_auth.plugin')),
                ('zone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='keychains', to='rest_auth.securityzone')),
            ],
            options={
                'unique_together': {('plugin', 'keychain_id')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='action',
            unique_together={('plugin', 'name')},
        ),
    ]
